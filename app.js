// ===== CONFIG =====
const API_BASE = 'https://script.google.com/macros/s/AKfycbwycbOeOEHYRt4nHQvoG9-IGZg-zgQdnO7p5niMDpj21EKMCXKrKR9k2glAjIVn23TJ/exec'; // <<< ‡πÉ‡∏™‡πà‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
const TZ = 'Asia/Bangkok';

// ===== Utils =====
function toThaiLongDateBuddhist(input){
  if (!input) return '';
  let d;
  if (input instanceof Date) d = input;
  else if (!isNaN(input)) d = new Date(Math.round((Number(input) - 25569) * 86400 * 1000)); // excel serial
  else d = new Date(input);

  if (String(input).match(/[‡∏Å-‡πô]/)) {
    const parsed = Date.parse(String(input).replace(/\s+/g,' '));
    if (!isNaN(parsed)) d = new Date(parsed);
  }
  if (isNaN(d)) return String(input);

  const buddhistYear = d.getFullYear() + 543;
  const thMonthLong = d.toLocaleDateString('th-TH', { month:'long', timeZone: TZ });
  const day = d.getDate();
  return `${day} ${thMonthLong} ${buddhistYear}`;
}

function escapeHtml(str){
  return String(str ?? '')
    .replaceAll('&','&amp;').replaceAll('<','&lt;')
    .replaceAll('>','&gt;').replaceAll('"','&quot;')
    .replaceAll("'",'&#039;');
}
function linkify(text){
  let t = String(text||'');
  t = t.replace(/(https?:\/\/[^\s]+)/g, '<a href="$1" target="_blank" rel="noopener">$1</a>');
  t = t.replace(/(^|\s)(0\d{8,9})($|\s)/g, '$1<a href="tel:$2">$2</a>$3');
  return t;
}
function isUrl(s){ try{ const u=new URL(s); return u.protocol==='http:'||u.protocol==='https:'; }catch{return false;} }
function extractUrls(s){
  if (!s) return [];
  return String(s).replace(/\u200B/g,'').split(/[\s,]+/g).map(x=>x.trim()).filter(Boolean).filter(isUrl);
}

/** ‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î Google Maps ‡πÅ‡∏ö‡∏ö deep link (‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠) + fallback ‡πÄ‡∏ß‡πá‡∏ö */
function openMapDeepLink(lat, lng){
  const gmapsWeb = `https://www.google.com/maps?q=${lat},${lng}`;
  const ua = navigator.userAgent || '';
  const isAndroid = /Android/i.test(ua);
  const isIOS = /iPhone|iPad|iPod/i.test(ua);

  let appUrl = '';
  if (isIOS){
    appUrl = `comgooglemaps://?q=${lat},${lng}&center=${lat},${lng}&zoom=16`;
  }else if (isAndroid){
    appUrl = `intent://maps.google.com/?q=${lat},${lng}#Intent;scheme=https;package=com.google.android.apps.maps;end`;
  }

  if (appUrl){
    const t = setTimeout(()=>{ window.open(gmapsWeb, '_blank', 'noopener'); }, 1200);
    window.location.href = appUrl;
    window.addEventListener('pagehide', ()=>clearTimeout(t), { once:true });
    window.addEventListener('blur', ()=>clearTimeout(t), { once:true });
  }else{
    window.open(gmapsWeb, '_blank', 'noopener');
  }
}

/** ‚úÖ ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏Ñ‡∏•‡∏¥‡∏õ‡∏ö‡∏≠‡∏£‡πå‡∏î + Toast ‡πÅ‡∏à‡πâ‡∏á‡∏ú‡∏• */
async function copyToClipboard(text){
  try{
    await navigator.clipboard.writeText(String(text ?? ''));
    Swal.fire({
      toast: true, position: 'top-end', timer: 1600, showConfirmButton: false,
      icon: 'success', title: '‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß'
    });
  }catch(e){
    // ‡πÄ‡∏ú‡∏∑‡πà‡∏≠ clipboard API ‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°
    const ta = document.createElement('textarea');
    ta.value = String(text ?? '');
    ta.style.position = 'fixed'; ta.style.left = '-9999px';
    document.body.appendChild(ta);
    ta.select(); document.execCommand('copy'); document.body.removeChild(ta);
    Swal.fire({
      toast: true, position: 'top-end', timer: 1600, showConfirmButton: false,
      icon: 'success', title: '‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß'
    });
  }
}

/** ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö SweetAlert2 (‡∏°‡∏µ‡∏õ‡πâ‡∏≤‡∏¢‡∏Ø, Facebook, ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏ö‡∏ö deep link, ‡πÅ‡∏•‡∏∞‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ç‡∏ä‡∏µ) */
function buildDetailTable(item){
  // --- ‡∏õ‡πâ‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå ---
  const bannerVal = item['‡∏õ‡πâ‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå'] ?? '';
  const bannerUrls = extractUrls(bannerVal);
  const bannerHtml = bannerUrls.length
    ? `<div class="d-flex flex-wrap gap-2">${
        bannerUrls.map(u=>`
          <a href="${escapeHtml(u)}" target="_blank" rel="noopener">
            <img src="${escapeHtml(u)}" alt="‡∏õ‡πâ‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå"
                 style="max-width:220px;height:auto;border-radius:12px;border:1px solid #e6e6ea;box-shadow:0 4px 14px rgba(0,0,0,.08);">
          </a>`).join('')
      }</div>`
    : escapeHtml(bannerVal || '');

  // --- Facebook (‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏™‡∏±‡πâ‡∏ô) ---
  const fbVal = item['Facebook'] ?? '';
  const fbUrls = extractUrls(fbVal);
  const facebookHtml = fbUrls.length
    ? fbUrls.map((u,i)=>`<a href="${escapeHtml(u)}" target="_blank" rel="noopener">‡πÄ‡∏õ‡∏¥‡∏î Facebook${fbUrls.length>1?` (${i+1})`:''}</a>`).join(' ‚Ä¢ ')
    : escapeHtml(fbVal || '');

  // --- ‡∏û‡∏¥‡∏Å‡∏±‡∏î + ‡∏õ‡∏∏‡πà‡∏° deep link ---
  const coordVal = (item['‡∏û‡∏¥‡∏Å‡∏±‡∏î'] ?? '').trim();
  let coordHtml = escapeHtml(coordVal);
  if (coordVal && coordVal.includes(',')){
    const [latStr,lngStr] = coordVal.split(',').map(s=>s.trim());
    const lat = parseFloat(latStr), lng = parseFloat(lngStr);
    if (!isNaN(lat) && !isNaN(lng)){
      coordHtml = `
        <div class="d-flex flex-column flex-sm-row align-items-start gap-2">
          <span>${escapeHtml(coordVal)}</span>
          <button class="btn btn-sm btn-success" onclick="window.__OPEN_MAP__(${lat}, ${lng})">
            ‡πÄ‡∏õ‡∏¥‡∏î Google Maps
          </button>
        </div>
      `;
    }
  }

  // --- ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ç‡∏ä‡∏µ + ‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å ---
  const acctRaw = String(item['‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ç‡∏ä‡∏µ'] ?? '').trim();
  const acctHtml = acctRaw
    ? `
      <div class="d-flex flex-column flex-sm-row align-items-start gap-2">
        <span class="font-monospace">${escapeHtml(acctRaw)}</span>
        <button class="btn btn-sm btn-outline-secondary"
                data-copy="${escapeHtml(acctRaw)}"
                onclick="window.__COPY__(this.dataset.copy)">
          üìã ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å
        </button>
      </div>
    `
    : '';

  // --- ‡∏£‡∏ß‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á ---
  const entries = [
    ['‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡∏±‡∏î', item['‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡∏±‡∏î']],
    ['‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà', toThaiLongDateBuddhist(item['‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà'])],
    ['‡πÄ‡∏ß‡∏•‡∏≤‡∏ñ‡∏ß‡∏≤‡∏¢', item['‡πÄ‡∏ß‡∏•‡∏≤‡∏ñ‡∏ß‡∏≤‡∏¢']],
    ['‡∏≠‡∏≥‡πÄ‡∏†‡∏≠', item['‡∏≠‡∏≥‡πÄ‡∏†‡∏≠']],
    ['‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î', item['‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î']],
    ['‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®', item['‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®']],
    ['‡∏û‡∏¥‡∏Å‡∏±‡∏î', { __html: coordHtml }],
    ['‡∏à‡∏∏‡∏î‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå', item['‡∏à‡∏∏‡∏î‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå'] ?? item['‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå'] ?? ''],
    ['‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£', item['‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£']],
    // ‡πÉ‡∏ä‡πâ acctHtml (‡∏°‡∏µ‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å)
    ['‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ç‡∏ä‡∏µ', { __html: acctHtml }],
    ['‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ç‡∏ä‡∏µ', item['‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ç‡∏ä‡∏µ']],
    ['‡∏õ‡πâ‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå', { __html: bannerHtml }],
    ['‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠', item['‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠']],
    ['‡πÑ‡∏•‡∏ô‡πå', item['‡πÑ‡∏•‡∏ô‡πå']],
    ['Facebook', { __html: facebookHtml }],
    ['‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠', item['‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠']],
    ['‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏', item['‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏']],
  ];

  const rows = entries.map(([k,v])=>{
    const valueHtml = (v && typeof v === 'object' && v.__html !== undefined)
      ? v.__html
      : linkify(escapeHtml(v||''));
    return `
      <tr>
        <th style="white-space:nowrap">${escapeHtml(k)}</th>
        <td>${valueHtml}</td>
      </tr>
    `;
  }).join('');

  return `
  <div class="table-responsive text-start">
    <table class="table table-sm">
      <tbody>${rows}</tbody>
    </table>
  </div>
`;
}

async function fetchEvents(){
  const url = `${API_BASE}?action=list`;
  const res = await fetch(url, { method:'GET', cache:'no-store' });
  if (!res.ok) throw new Error('‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
  return await res.json();
}

function showDetail(item){
  const html = buildDetailTable(item);
  Swal.fire({
    title: '‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏á‡∏≤‡∏ô‡∏Å‡∏ê‡∏¥‡∏ô',
    html,
    width: Math.min(window.innerWidth-32, 700),
    confirmButtonText: '‡∏õ‡∏¥‡∏î',
    customClass: { popup: 'card-mac' }
  });
}

// export ‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏∑‡πà‡∏ô‡πÉ‡∏ä‡πâ
window.__GATHIN_APP__ = {
  fetchEvents, toThaiLongDateBuddhist, showDetail, escapeHtml
};
// export deep link & copy
window.__OPEN_MAP__ = openMapDeepLink;
window.__COPY__ = copyToClipboard;

// ===== Disclaimer popup on first visit =====
(function(){
  const KEY = 'gathin_disclaimer_ack_v1';

  function showDisclaimer(){
    // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Ñ‡∏¢‡∏Å‡∏î‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡∏ï‡∏¥‡πä‡∏Å "‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏µ‡∏Å" ‡πÅ‡∏•‡πâ‡∏ß ‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≤‡∏°
    if (localStorage.getItem(KEY) === '1') return;

    Swal.fire({
      icon: 'info',
      title: '‡∏Ç‡πâ‡∏≠‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö',
      html: `
        <div class="text-start">
          <p><strong>‡∏£‡∏∞‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡πà‡∏≤‡∏ß ‡πÜ ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏á‡∏≤‡∏ô‡∏Å‡∏ê‡∏¥‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô</strong></p>
          <ul class="mb-2">
            <li>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏á‡∏≤‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á</li>
            <li>‡∏ú‡∏π‡πâ‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö‡∏ï‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏•‡∏≤‡∏î‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡πà‡∏≤‡∏ä‡πâ‡∏≤ ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢‡πÉ‡∏î ‡πÜ ‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏µ‡πâ</li>
          </ul>
          <p class="mb-0"><small>‡∏´‡∏≤‡∏Å‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡πÇ‡∏õ‡∏£‡∏î‡πÅ‡∏à‡πâ‡∏á‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á</small></p>
        </div>
      `,
      confirmButtonText: '‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÅ‡∏•‡πâ‡∏ß',
      input: 'checkbox',
      inputPlaceholder: '‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏µ‡∏Å',
      allowOutsideClick: false,
      customClass: { popup: 'card-mac' }
    }).then(res=>{
      // ‡∏ñ‡πâ‡∏≤‡∏ï‡∏¥‡πä‡∏Å "‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏µ‡∏Å" ‡πÉ‡∏´‡πâ‡∏à‡∏≥
      if (res && res.value) {
        try { localStorage.setItem(KEY, '1'); } catch(e){}
      }
    });
  }

  if (document.readyState === 'loading'){
    document.addEventListener('DOMContentLoaded', showDisclaimer);
  } else {
    showDisclaimer();
  }
})();
